#include<iostream>
using namespace std;
int findPivot(int a[],int low,int high)
{
    if(high<low)
    return -1;
    if(low==high)
    return low;
    
    int mid=(low+high)/2;
    if(mid<high && a[mid]>a[mid+1])
     return mid;
    if(mid>low && a[mid]<a[mid-1])
     return mid-1;
    if(a[low]>=a[mid])
     return findPivot(a,low,mid-1);
    return findPivot(a,mid+1,high);
}
int binarySearch(int a[],int low,int high,int key)
{
    if(high<low)
    return -1;
    int mid=(low+high)/2;
    if(a[mid]==key)
    return mid;
    if(a[mid]>key)
     return binarySearch(a,low,mid-1,key);
    return binarySearch(a,mid+1,high,key);
}
int pivotBinarySearch(int a[],int n,int key)
{
    int pivot=findPivot(a,0,n-1);
    if(pivot==-1)
     return binarySearch(a,0,n-1,key);
    if(a[pivot]==key)
     return pivot;
    if(a[0]<=key)
     return binarySearch(a,0,pivot-1,key);
    return binarySearch(a,pivot+1,n-1,key);
}
int main()
 {
	//code
	int t;
	cin>>t;
	while(t--)
	{
	    int i,n,x;
	    cin>>n>>x;
	    int a[n];
	    for(i=0;i<n;i++)
	    cin>>a[i];
	    int ind=pivotBinarySearch(a,n,x);
	    if(ind==-1)
	    cout<<"OOPS! NOT FOUND"<<endl;
	    else
	    cout<<ind<<endl;
	}
	return 0;
}
